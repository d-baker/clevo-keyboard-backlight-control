#! /bin/bash
set -o nounset

rootdir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

# States
CHARGING=1
DISCHARGING=2

LEVEL_NORMAL=3
LEVEL_LOW=4
LEVEL_CRITICAL=5

ON=6
OFF=7


# Battery danger levels
critical_level=10
low_level=20

# Default values
state_charging=$CHARGING
state_level=$LEVEL_NORMAL
state_on=$ON

isDischarging () {
    batterylevel=$(acpi -V | awk '/Discharging/ { print ($4 + 0) }')
    acpi -V | grep -q "Discharging"

    # Grep command will exit with zero if it finds the string, hence this unintuitive logic
    discharging=$?
    return $discharging
}

isOn () {
    batterylevel=$(acpi -V | awk '/Discharging/ { print ($4 + 0) }')
    cat /etc/modprobe.d/tuxedo_keyboard.conf | grep -q "kb_off=1"

    # Grep command will exit with zero if it finds the string, hence this unintuitive logic
    off=$?
    if [[ off -eq 0 ]]; then return 1; else return 0; fi
}


if isDischarging; then
    state_charging=$DISCHARGING
else
    state_charging=$CHARGING
fi

if [[ $batterylevel -le $critical_level ]]; then
    state_level=$LEVEL_CRITICAL
elif [[ $batterylevel -le $low_level ]]; then
    state_level=$LEVEL_LOW
else
    state_level=$LEVEL_NORMAL
fi

if isOn; then
    state_on=$ON
else
    state_on=$OFF
fi

printf "> Checking whether the keyboard is on...\n\n"
# Only turn on the keyboard if we already have it set to on
if [[ $state_on -eq $ON ]]; then

    if [[ $state_charging -eq $DISCHARGING ]]; then
        printf "Battery is discharging. "

        if [[ $state_level -eq $LEVEL_LOW ]]; then
            echo "Battery level is low."
            # Make keyboard low battery-colored
            cat "$rootdir/kb-on.txt" "$rootdir/lowbat.txt" | sudo tee /etc/modprobe.d/tuxedo_keyboard.conf > /dev/null
            sudo modprobe -r tuxedo_keyboard
            sudo modprobe tuxedo_keyboard

        elif [[ $state_level -eq $LEVEL_CRITICAL ]]; then
            echo "Battery level is critical."
            # Make keyboard critical battery-colored
            cat "$rootdir/kb-on.txt" "$rootdir/criticalbat.txt" | sudo tee /etc/modprobe.d/tuxedo_keyboard.conf > /dev/null
            sudo modprobe -r tuxedo_keyboard
            sudo modprobe tuxedo_keyboard
        fi
    else
       printf "Battery charging. " 
    fi

    if [[ $state_level -eq $LEVEL_NORMAL ]] || [[ $state_charging -eq $CHARGING ]]; then
        echo "Battery level is normal."

        # Check if the state in kernel and state in state file differ
        state_diff=$(diff "state.txt" "/etc/modprobe.d/tuxedo_keyboard.conf")
        if [ -z "$state_diff" ]; then
            # No diff - keyboard colorscheme is up to date with saved state
            printf "\nKeyboard color is up to date\n"
        else
            # Keyboard needs updating to match saved state
            printf "\nReturning keyboard to its saved color state\n"

            # Load saved color state
            cat "$rootdir/state.txt" | sudo tee /etc/modprobe.d/tuxedo_keyboard.conf > /dev/null
            sudo modprobe -r tuxedo_keyboard
            sudo modprobe tuxedo_keyboard
        fi


    fi
else
    echo "Keyboard backlight off, not doing anything"
fi
